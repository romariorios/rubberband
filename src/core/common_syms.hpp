#ifdef DECLARING
#   define DEFSYM(__name, __s) rbb::object SY_##__name = rbb::symbol(__s);
#else
#   define DEFSYM(__name, __s) extern rbb::object SY_##__name;
#endif

DEFSYM(ASTER, "*")
DEFSYM(CONCAT, "concat")
DEFSYM(DASH, "-")
DEFSYM(DEL, "del")
DEFSYM(DEQ, "==")
DEFSYM(EQ, "=")
DEFSYM(GE, ">=")
DEFSYM(GT, ">")
DEFSYM(HAS_IFACE, "has_iface")
DEFSYM(I_ARR, "listable")
DEFSYM(I_BL, "block")
DEFSYM(I_BOOL, "boolean")
DEFSYM(I_NUM, "numeric")
DEFSYM(I_SYM, "symbol")
DEFSYM(I_TABLE, "table")
DEFSYM(IF_T, "if_true")
DEFSYM(IF_T_R, "if_true_raise")
DEFSYM(KEYS, "keys")
DEFSYM(L_AND, "and")
DEFSYM(L_NEG, "neg")
DEFSYM(L_OR, "or")
DEFSYM(LDF_BACK, "back")
DEFSYM(LDF_CHVAL, "char_val")
DEFSYM(LDF_EVAL, "eval")
DEFSYM(LDF_EVAL_E, "eval_expr")
DEFSYM(LDF_ERES, "eval_res")
DEFSYM(LDF_EXPSKIP, "expr_skip")
DEFSYM(LDF_LIT, "lit")
DEFSYM(LDF_PUNTIL, "parse_until")
DEFSYM(LDF_REVAL, "run_eval")
DEFSYM(LDF_SKIP, "skip")
DEFSYM(LDF_TRIG, "trigger")
DEFSYM(LEN, "len")
DEFSYM(LOAD, "load")
DEFSYM(MERGE, "merge")
DEFSYM(NE, "/=")
DEFSYM(LE, "<=")
DEFSYM(LT, "<")
DEFSYM(PLUS, "+")
DEFSYM(RESP_TO, "responds_to")
DEFSYM(SLASH, "/")
DEFSYM(SLICE, "slice")

#undef DEFSYM
