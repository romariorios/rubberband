%load io~()

~print(
  ~map~ (|1, 2, 3, 4, 5, 6) n {
    !~n * (~n)
  })

~:list = |(|1), (|2), (|3), (|4), (|5)
~map~ (~list) el { ~el|0, ~el 0 + 1 }
~print(~map~ (~list) el { !~el 0 })

~print(~accum~ (|1, 2, 3, 4, 5, 6) n prod { !~n * (~prod) })
~print(~range:from = 1, to = 10, step = 2)

~:fac = ~fn~ n {
  !~accum~ (~range:from = 1, to = ~n) n prod { !~n * (~prod) }
}

~print(~fac 10)
~print(~map)

