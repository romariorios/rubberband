# A custom while implementation
# Get arguments from curried functions and put them into a list
# ~uncurry|[x, y]{ !$x + $y }~
~:uncurry ->
{
    ~:args -> $, block_args -> :[]
    !{
        ~:block -> $
        !{
            ~:context -> $, i -> 0
            ~:loop -> {
                ~block_args:(~args(~i)) -> $

                !~i < (~args* - 1)?~ {
                    ~:i -> ~i + 1
                    !~loop~
                } {
                    !~block(~context)(~block_args)
                }
            }

            !~loop~
        }~
    }~
}:[]

# While
# ~while~ { !~i < 20 } { ~print(~i) }
~:while -> ~uncurry|[context, condition, block] {
    $condition($context)()?~ {
        // TODO
    }
}:[]
